#title Graver Manacles
#subtitle or, Clever Anagrams
#tags programming letters words
#published 2016-07-22 14:00
#lastEdit 2016-08-21 16:08
So, if you've ever met me, and accidentally gotten me started talking about programming, odds are I've mentioned my <strike>unhealthy obsession</strike> pet project of <code>anagrams</code>. I find it interesting because, like any good programming interview question, it has a somewhat obvious solution, which has a horrendous runtime when taken far enough; and it has more clever solutions that improve runtime drastically. What follows is an exploration of how to move from that initial idea to something more practical.

That being said, I have found enough wrinkles and extensions to the problem so that I don't think there's a single best solution, but rather a few different avenues to explore, each of which is interesting in its own way (at least to me). 

As will become the norm, let's assume we have a <code>set()</code> containing all acceptable words, in <code>ALL CAPS</code>. The task at hand, at least preliminarily, would be: given the jumble <code>AEMT</code>, return all valid words that are anagrams of it, such as <code>'MATE', 'MEAT', 'META', 'TAME', 'TEAM'</code>, maybe more or fewer depending on your specific dictionary. 

<h3>First (intentiaionally naive) attempt</h3>
The most direct way, as usual, is brute force - given a collection of letters,
we can try every combination (more technically, permutation) of the input,
and check each one to see if it's in <code>WORDS</code>.

Let's start from actual scratch, and roll our own permutation maker - maybe we are in a language that doesn't have permutation built-in to a standard library, and while I'm showing Python code, it shouldn't be too hard to generalize to other (procedural) languages.
<pre><code class="python">def next_permutation(letters):
    ## base-case for recursive algorithm
    if not letters:
        yield ""
    for index, letter in enumerate(letters):
        ## hold out a new start letter
        ## NB: an extra O(n) pass, since making a copy
        remaining = letters[:index] + letters[index+1:]
        ## loop over all permutations of remaining letters
        for permutation in next_permutation(remaining):
            yield letter + permutation
</code></pre>
though, yeah, the true Python solution is not only cleaner, but also ~10x faster, in my timing runs
<pre><code class="python">from itertools import permutations
def next_permutation(letters):
    for perm in permutations(letters):
        yield "".join(perm)
</code></pre>

Seems reasonable, let's look at some results:

For the input <code>"ABC"</code>, we get:
<pre><code class="python">ABC ACB BAC BCA CAB CBA</code></pre>
and for <code>"ABCD"</code>. we get:
<pre><code class="python">ABCD ABDC ACBD ACDB ADBC ADCB
BACD BADC BCAD BCDA BDAC BDCA
CABD CADB CBAD CBDA CDAB CDBA
DABC DACB DBAC DBCA DCAB DCBA</code></pre>
This doesn't look too bad; seems like a pretty reasonable number of words to scan through, look up in <code>WORDS</code>, to find results.

However, start running this with a larger word/jumble, say <code>WRINKLE</code>, and there starts to be some concern:
<div class="panel panel-warning">
    <div class="panel-heading">Caution: lots of text...
        <button type="button" class = "btn btn-default" id="anagram6toggle">show/hide</button>
    </div>
    <div class="panel-body" id="anagram6">
<pre><code class="python" style="font-size:7px

 KEILNRW KEILNWR KEILRNW KEILRWN KEILWNR KEILWRN KEINLRW KEINLWR KEINRLW KEINRWL KEINWLR KEINWRL KEIRLNW KEIRLWN KEIRNLW KEIRNWL KEIRWLN KEIRWNL KEIWLNR KEIWLRN KEIWNLR KEIWNRL KEIWRLN KEIWRNL KELINRW KELINWR KELIRNW KELIRWN KELIWNR KELIWRN KELNIRW KELNIWR KELNRIW KELNRWI KELNWIR KELNWRI KELRINW KELRIWN KELRNIW KELRNWI KELRWIN KELRWNI KELWINR KELWIRN KELWNIR KELWNRI KELWRIN KELWRNI KENILRW KENILWR KENIRLW KENIRWL KENIWLR KENIWRL KENLIRW KENLIWR KENLRIW KENLRWI KENLWIR KENLWRI KENRILW KENRIWL KENRLIW KENRLWI KENRWIL KENRWLI KENWILR KENWIRL KENWLIR KENWLRI KENWRIL KENWRLI KERILNW KERILWN KERINLW KERINWL KERIWLN KERIWNL KERLINW KERLIWN KERLNIW KERLNWI KERLWIN KERLWNI KERNILW KERNIWL KERNLIW KERNLWI KERNWIL KERNWLI KERWILN KERWINL KERWLIN KERWLNI KERWNIL KERWNLI KEWILNR KEWILRN KEWINLR KEWINRL KEWIRLN KEWIRNL KEWLINR KEWLIRN KEWLNIR KEWLNRI KEWLRIN KEWLRNI KEWNILR KEWNIRL KEWNLIR KEWNLRI KEWNRIL KEWNRLI KEWRILN KEWRINL KEWRLIN KEWRLNI KEWRNIL KEWRNLI KIELNRW KIELNWR KIELRNW KIELRWN KIELWNR KIELWRN KIENLRW KIENLWR KIENRLW KIENRWL KIENWLR KIENWRL KIERLNW KIERLWN KIERNLW KIERNWL KIERWLN KIERWNL KIEWLNR KIEWLRN KIEWNLR KIEWNRL KIEWRLN KIEWRNL KILENRW KILENWR KILERNW KILERWN KILEWNR KILEWRN KILNERW KILNEWR KILNREW KILNRWE KILNWER KILNWRE KILRENW KILREWN KILRNEW KILRNWE KILRWEN KILRWNE KILWENR KILWERN KILWNER KILWNRE KILWREN KILWRNE KINELRW KINELWR KINERLW KINERWL KINEWLR KINEWRL KINLERW KINLEWR KINLREW KINLRWE KINLWER KINLWRE KINRELW KINREWL KINRLEW KINRLWE KINRWEL KINRWLE KINWELR KINWERL KINWLER KINWLRE KINWREL KINWRLE KIRELNW KIRELWN KIRENLW KIRENWL KIREWLN KIREWNL KIRLENW KIRLEWN KIRLNEW KIRLNWE KIRLWEN KIRLWNE KIRNELW KIRNEWL KIRNLEW KIRNLWE KIRNWEL KIRNWLE KIRWELN KIRWENL KIRWLEN KIRWLNE KIRWNEL KIRWNLE KIWELNR KIWELRN KIWENLR KIWENRL KIWERLN KIWERNL KIWLENR KIWLERN KIWLNER KIWLNRE KIWLREN KIWLRNE KIWNELR KIWNERL KIWNLER KIWNLRE KIWNREL KIWNRLE KIWRELN KIWRENL KIWRLEN KIWRLNE KIWRNEL KIWRNLE KLEINRW KLEINWR KLEIRNW KLEIRWN KLEIWNR KLEIWRN KLENIRW KLENIWR KLENRIW KLENRWI KLENWIR KLENWRI KLERINW KLERIWN KLERNIW KLERNWI KLERWIN KLERWNI KLEWINR KLEWIRN KLEWNIR KLEWNRI KLEWRIN KLEWRNI KLIENRW KLIENWR KLIERNW KLIERWN KLIEWNR KLIEWRN KLINERW KLINEWR KLINREW KLINRWE KLINWER KLINWRE KLIRENW KLIREWN KLIRNEW KLIRNWE KLIRWEN KLIRWNE KLIWENR KLIWERN KLIWNER KLIWNRE KLIWREN KLIWRNE KLNEIRW KLNEIWR KLNERIW KLNERWI KLNEWIR KLNEWRI KLNIERW KLNIEWR KLNIREW KLNIRWE KLNIWER KLNIWRE KLNREIW KLNREWI KLNRIEW KLNRIWE KLNRWEI KLNRWIE KLNWEIR KLNWERI KLNWIER KLNWIRE KLNWREI KLNWRIE KLREINW KLREIWN KLRENIW KLRENWI KLREWIN KLREWNI KLRIENW KLRIEWN KLRINEW KLRINWE KLRIWEN KLRIWNE KLRNEIW KLRNEWI KLRNIEW KLRNIWE KLRNWEI KLRNWIE KLRWEIN KLRWENI KLRWIEN KLRWINE KLRWNEI KLRWNIE KLWEINR KLWEIRN KLWENIR KLWENRI KLWERIN KLWERNI KLWIENR KLWIERN KLWINER KLWINRE KLWIREN KLWIRNE KLWNEIR KLWNERI KLWNIER KLWNIRE KLWNREI KLWNRIE KLWREIN KLWRENI KLWRIEN KLWRINE KLWRNEI KLWRNIE KNEILRW KNEILWR KNEIRLW KNEIRWL KNEIWLR KNEIWRL KNELIRW KNELIWR KNELRIW KNELRWI KNELWIR KNELWRI KNERILW KNERIWL KNERLIW KNERLWI KNERWIL KNERWLI KNEWILR KNEWIRL KNEWLIR KNEWLRI KNEWRIL KNEWRLI KNIELRW KNIELWR KNIERLW KNIERWL KNIEWLR KNIEWRL KNILERW KNILEWR KNILREW KNILRWE KNILWER KNILWRE KNIRELW KNIREWL KNIRLEW KNIRLWE KNIRWEL KNIRWLE KNIWELR KNIWERL KNIWLER KNIWLRE KNIWREL KNIWRLE KNLEIRW KNLEIWR KNLERIW KNLERWI KNLEWIR KNLEWRI KNLIERW KNLIEWR KNLIREW KNLIRWE KNLIWER KNLIWRE KNLREIW KNLREWI KNLRIEW KNLRIWE KNLRWEI KNLRWIE KNLWEIR KNLWERI KNLWIER KNLWIRE KNLWREI KNLWRIE KNREILW KNREIWL KNRELIW KNRELWI KNREWIL KNREWLI KNRIELW KNRIEWL KNRILEW KNRILWE KNRIWEL KNRIWLE KNRLEIW KNRLEWI KNRLIEW KNRLIWE KNRLWEI KNRLWIE KNRWEIL KNRWELI KNRWIEL KNRWILE KNRWLEI KNRWLIE KNWEILR KNWEIRL KNWELIR KNWELRI KNWERIL KNWERLI KNWIELR KNWIERL KNWILER KNWILRE KNWIREL KNWIRLE KNWLEIR KNWLERI KNWLIER KNWLIRE KNWLREI KNWLRIE KNWREIL KNWRELI KNWRIEL KNWRILE KNWRLEI KNWRLIE KREILNW KREILWN KREINLW KREINWL KREIWLN KREIWNL KRELINW KRELIWN KRELNIW KRELNWI KRELWIN KRELWNI KRENILW KRENIWL KRENLIW KRENLWI KRENWIL KRENWLI KREWILN KREWINL KREWLIN KREWLNI KREWNIL KREWNLI KRIELNW KRIELWN KRIENLW KRIENWL KRIEWLN KRIEWNL KRILENW KRILEWN KRILNEW KRILNWE KRILWEN KRILWNE KRINELW KRINEWL KRINLEW KRINLWE KRINWEL KRINWLE KRIWELN KRIWENL KRIWLEN KRIWLNE KRIWNEL KRIWNLE KRLEINW KRLEIWN KRLENIW KRLENWI KRLEWIN KRLEWNI KRLIENW KRLIEWN KRLINEW KRLINWE KRLIWEN KRLIWNE KRLNEIW KRLNEWI KRLNIEW KRLNIWE KRLNWEI KRLNWIE KRLWEIN KRLWENI KRLWIEN KRLWINE KRLWNEI KRLWNIE KRNEILW KRNEIWL KRNELIW KRNELWI KRNEWIL KRNEWLI KRNIELW KRNIEWL KRNILEW KRNILWE KRNIWEL KRNIWLE KRNLEIW KRNLEWI KRNLIEW KRNLIWE KRNLWEI KRNLWIE KRNWEIL KRNWELI KRNWIEL KRNWILE KRNWLEI KRNWLIE KRWEILN KRWEINL KRWELIN KRWELNI KRWENIL KRWENLI KRWIELN KRWIENL KRWILEN KRWILNE KRWINEL KRWINLE KRWLEIN KRWLENI KRWLIEN KRWLINE KRWLNEI KRWLNIE KRWNEIL KRWNELI KRWNIEL KRWNILE KRWNLEI KRWNLIE KWEILNR KWEILRN KWEINLR KWEINRL KWEIRLN KWEIRNL KWELINR KWELIRN KWELNIR KWELNRI KWELRIN KWELRNI KWENILR KWENIRL KWENLIR KWENLRI KWENRIL KWENRLI KWERILN KWERINL KWERLIN KWERLNI KWERNIL KWERNLI KWIELNR KWIELRN KWIENLR KWIENRL KWIERLN KWIERNL KWILENR KWILERN KWILNER KWILNRE KWILREN KWILRNE KWINELR KWINERL KWINLER KWINLRE KWINREL KWINRLE KWIRELN KWIRENL KWIRLEN KWIRLNE KWIRNEL KWIRNLE KWLEINR KWLEIRN KWLENIR KWLENRI KWLERIN KWLERNI KWLIENR KWLIERN KWLINER KWLINRE KWLIREN KWLIRNE KWLNEIR KWLNERI KWLNIER KWLNIRE KWLNREI KWLNRIE KWLREIN KWLRENI KWLRIEN KWLRINE KWLRNEI KWLRNIE KWNEILR KWNEIRL KWNELIR KWNELRI KWNERIL KWNERLI KWNIELR KWNIERL KWNILER KWNILRE KWNIREL KWNIRLE KWNLEIR KWNLERI KWNLIER KWNLIRE KWNLREI KWNLRIE KWNREIL KWNRELI KWNRIEL KWNRILE KWNRLEI KWNRLIE KWREILN KWREINL KWRELIN KWRELNI KWRENIL KWRENLI KWRIELN KWRIENL KWRILEN KWRILNE KWRINEL KWRINLE KWRLEIN KWRLENI KWRLIEN KWRLINE KWRLNEI KWRLNIE KWRNEIL KWRNELI KWRNIEL KWRNILE KWRNLEI KWRNLIE
 LEIKNRW LEIKNWR LEIKRNW LEIKRWN LEIKWNR LEIKWRN LEINKRW LEINKWR LEINRKW LEINRWK LEINWKR LEINWRK LEIRKNW LEIRKWN LEIRNKW LEIRNWK LEIRWKN LEIRWNK LEIWKNR LEIWKRN LEIWNKR LEIWNRK LEIWRKN LEIWRNK LEKINRW LEKINWR LEKIRNW LEKIRWN LEKIWNR LEKIWRN LEKNIRW LEKNIWR LEKNRIW LEKNRWI LEKNWIR LEKNWRI LEKRINW LEKRIWN LEKRNIW LEKRNWI LEKRWIN LEKRWNI LEKWINR LEKWIRN LEKWNIR LEKWNRI LEKWRIN LEKWRNI LENIKRW LENIKWR LENIRKW LENIRWK LENIWKR LENIWRK LENKIRW LENKIWR LENKRIW LENKRWI LENKWIR LENKWRI LENRIKW LENRIWK LENRKIW LENRKWI LENRWIK LENRWKI LENWIKR LENWIRK LENWKIR LENWKRI LENWRIK LENWRKI LERIKNW LERIKWN LERINKW LERINWK LERIWKN LERIWNK LERKINW LERKIWN LERKNIW LERKNWI LERKWIN LERKWNI LERNIKW LERNIWK LERNKIW LERNKWI LERNWIK LERNWKI LERWIKN LERWINK LERWKIN LERWKNI LERWNIK LERWNKI LEWIKNR LEWIKRN LEWINKR LEWINRK LEWIRKN LEWIRNK LEWKINR LEWKIRN LEWKNIR LEWKNRI LEWKRIN LEWKRNI LEWNIKR LEWNIRK LEWNKIR LEWNKRI LEWNRIK LEWNRKI LEWRIKN LEWRINK LEWRKIN LEWRKNI LEWRNIK LEWRNKI LIEKNRW LIEKNWR LIEKRNW LIEKRWN LIEKWNR LIEKWRN LIENKRW LIENKWR LIENRKW LIENRWK LIENWKR LIENWRK LIERKNW LIERKWN LIERNKW LIERNWK LIERWKN LIERWNK LIEWKNR LIEWKRN LIEWNKR LIEWNRK LIEWRKN LIEWRNK LIKENRW LIKENWR LIKERNW LIKERWN LIKEWNR LIKEWRN LIKNERW LIKNEWR LIKNREW LIKNRWE LIKNWER LIKNWRE LIKRENW LIKREWN LIKRNEW LIKRNWE LIKRWEN LIKRWNE LIKWENR LIKWERN LIKWNER LIKWNRE LIKWREN LIKWRNE LINEKRW LINEKWR LINERKW LINERWK LINEWKR LINEWRK LINKERW LINKEWR LINKREW LINKRWE LINKWER LINKWRE LINREKW LINREWK LINRKEW LINRKWE LINRWEK LINRWKE LINWEKR LINWERK LINWKER LINWKRE LINWREK LINWRKE LIREKNW LIREKWN LIRENKW LIRENWK LIREWKN LIREWNK LIRKENW LIRKEWN LIRKNEW LIRKNWE LIRKWEN LIRKWNE LIRNEKW LIRNEWK LIRNKEW LIRNKWE LIRNWEK LIRNWKE LIRWEKN LIRWENK LIRWKEN LIRWKNE LIRWNEK LIRWNKE LIWEKNR LIWEKRN LIWENKR LIWENRK LIWERKN LIWERNK LIWKENR LIWKERN LIWKNER LIWKNRE LIWKREN LIWKRNE LIWNEKR LIWNERK LIWNKER LIWNKRE LIWNREK LIWNRKE LIWREKN LIWRENK LIWRKEN LIWRKNE LIWRNEK LIWRNKE LKEINRW LKEINWR LKEIRNW LKEIRWN LKEIWNR LKEIWRN LKENIRW LKENIWR LKENRIW LKENRWI LKENWIR LKENWRI LKERINW LKERIWN LKERNIW LKERNWI LKERWIN LKERWNI LKEWINR LKEWIRN LKEWNIR LKEWNRI LKEWRIN LKEWRNI LKIENRW LKIENWR LKIERNW LKIERWN LKIEWNR LKIEWRN LKINERW LKINEWR LKINREW LKINRWE LKINWER LKINWRE LKIRENW LKIREWN LKIRNEW LKIRNWE LKIRWEN LKIRWNE LKIWENR LKIWERN LKIWNER LKIWNRE LKIWREN LKIWRNE LKNEIRW LKNEIWR LKNERIW LKNERWI LKNEWIR LKNEWRI LKNIERW LKNIEWR LKNIREW LKNIRWE LKNIWER LKNIWRE LKNREIW LKNREWI LKNRIEW LKNRIWE LKNRWEI LKNRWIE LKNWEIR LKNWERI LKNWIER LKNWIRE LKNWREI LKNWRIE LKREINW LKREIWN LKRENIW LKRENWI LKREWIN LKREWNI LKRIENW LKRIEWN LKRINEW LKRINWE LKRIWEN LKRIWNE LKRNEIW LKRNEWI LKRNIEW LKRNIWE LKRNWEI LKRNWIE LKRWEIN LKRWENI LKRWIEN LKRWINE LKRWNEI LKRWNIE LKWEINR LKWEIRN LKWENIR LKWENRI LKWERIN LKWERNI LKWIENR LKWIERN LKWINER LKWINRE LKWIREN LKWIRNE LKWNEIR LKWNERI LKWNIER LKWNIRE LKWNREI LKWNRIE LKWREIN LKWRENI LKWRIEN LKWRINE LKWRNEI LKWRNIE LNEIKRW LNEIKWR LNEIRKW LNEIRWK LNEIWKR LNEIWRK LNEKIRW LNEKIWR LNEKRIW LNEKRWI LNEKWIR LNEKWRI LNERIKW LNERIWK LNERKIW LNERKWI LNERWIK LNERWKI LNEWIKR LNEWIRK LNEWKIR LNEWKRI LNEWRIK LNEWRKI LNIEKRW LNIEKWR LNIERKW LNIERWK LNIEWKR LNIEWRK LNIKERW LNIKEWR LNIKREW LNIKRWE LNIKWER LNIKWRE LNIREKW LNIREWK LNIRKEW LNIRKWE LNIRWEK LNIRWKE LNIWEKR LNIWERK LNIWKER LNIWKRE LNIWREK LNIWRKE LNKEIRW LNKEIWR LNKERIW LNKERWI LNKEWIR LNKEWRI LNKIERW LNKIEWR LNKIREW LNKIRWE LNKIWER LNKIWRE LNKREIW LNKREWI LNKRIEW LNKRIWE LNKRWEI LNKRWIE LNKWEIR LNKWERI LNKWIER LNKWIRE LNKWREI LNKWRIE LNREIKW LNREIWK LNREKIW LNREKWI LNREWIK LNREWKI LNRIEKW LNRIEWK LNRIKEW LNRIKWE LNRIWEK LNRIWKE LNRKEIW LNRKEWI LNRKIEW LNRKIWE LNRKWEI LNRKWIE LNRWEIK LNRWEKI LNRWIEK LNRWIKE LNRWKEI LNRWKIE LNWEIKR LNWEIRK LNWEKIR LNWEKRI LNWERIK LNWERKI LNWIEKR LNWIERK LNWIKER LNWIKRE LNWIREK LNWIRKE LNWKEIR LNWKERI LNWKIER LNWKIRE LNWKREI LNWKRIE LNWREIK LNWREKI LNWRIEK LNWRIKE LNWRKEI LNWRKIE LREIKNW LREIKWN LREINKW LREINWK LREIWKN LREIWNK LREKINW LREKIWN LREKNIW LREKNWI LREKWIN LREKWNI LRENIKW LRENIWK LRENKIW LRENKWI LRENWIK LRENWKI LREWIKN LREWINK LREWKIN LREWKNI LREWNIK LREWNKI LRIEKNW LRIEKWN LRIENKW LRIENWK LRIEWKN LRIEWNK LRIKENW LRIKEWN LRIKNEW LRIKNWE LRIKWEN LRIKWNE LRINEKW LRINEWK LRINKEW LRINKWE LRINWEK LRINWKE LRIWEKN LRIWENK LRIWKEN LRIWKNE LRIWNEK LRIWNKE LRKEINW LRKEIWN LRKENIW LRKENWI LRKEWIN LRKEWNI LRKIENW LRKIEWN LRKINEW LRKINWE LRKIWEN LRKIWNE LRKNEIW LRKNEWI LRKNIEW LRKNIWE LRKNWEI LRKNWIE LRKWEIN LRKWENI LRKWIEN LRKWINE LRKWNEI LRKWNIE LRNEIKW LRNEIWK LRNEKIW LRNEKWI LRNEWIK LRNEWKI LRNIEKW LRNIEWK LRNIKEW LRNIKWE LRNIWEK LRNIWKE LRNKEIW LRNKEWI LRNKIEW LRNKIWE LRNKWEI LRNKWIE LRNWEIK LRNWEKI LRNWIEK LRNWIKE LRNWKEI LRNWKIE LRWEIKN LRWEINK LRWEKIN LRWEKNI LRWENIK LRWENKI LRWIEKN LRWIENK LRWIKEN LRWIKNE LRWINEK LRWINKE LRWKEIN LRWKENI LRWKIEN LRWKINE LRWKNEI LRWKNIE LRWNEIK LRWNEKI LRWNIEK LRWNIKE LRWNKEI LRWNKIE LWEIKNR LWEIKRN LWEINKR LWEINRK LWEIRKN LWEIRNK LWEKINR LWEKIRN LWEKNIR LWEKNRI LWEKRIN LWEKRNI LWENIKR LWENIRK LWENKIR LWENKRI LWENRIK LWENRKI LWERIKN LWERINK LWERKIN LWERKNI LWERNIK LWERNKI LWIEKNR LWIEKRN LWIENKR LWIENRK LWIERKN LWIERNK LWIKENR LWIKERN LWIKNER LWIKNRE LWIKREN LWIKRNE LWINEKR LWINERK LWINKER LWINKRE LWINREK LWINRKE LWIREKN LWIRENK LWIRKEN LWIRKNE LWIRNEK LWIRNKE LWKEINR LWKEIRN LWKENIR LWKENRI LWKERIN LWKERNI LWKIENR LWKIERN LWKINER LWKINRE LWKIREN LWKIRNE LWKNEIR LWKNERI LWKNIER LWKNIRE LWKNREI LWKNRIE LWKREIN LWKRENI LWKRIEN LWKRINE LWKRNEI LWKRNIE LWNEIKR LWNEIRK LWNEKIR LWNEKRI LWNERIK LWNERKI LWNIEKR LWNIERK LWNIKER LWNIKRE LWNIREK LWNIRKE LWNKEIR LWNKERI LWNKIER LWNKIRE LWNKREI LWNKRIE LWNREIK LWNREKI LWNRIEK LWNRIKE LWNRKEI LWNRKIE LWREIKN LWREINK LWREKIN LWREKNI LWRENIK LWRENKI LWRIEKN LWRIENK LWRIKEN LWRIKNE LWRINEK LWRINKE LWRKEIN LWRKENI LWRKIEN LWRKINE LWRKNEI LWRKNIE LWRNEIK LWRNEKI LWRNIEK LWRNIKE LWRNKEI LWRNKIE
 NEIKLRW NEIKLWR NEIKRLW NEIKRWL NEIKWLR NEIKWRL NEILKRW NEILKWR NEILRKW NEILRWK NEILWKR NEILWRK NEIRKLW NEIRKWL NEIRLKW NEIRLWK NEIRWKL NEIRWLK NEIWKLR NEIWKRL NEIWLKR NEIWLRK NEIWRKL NEIWRLK NEKILRW NEKILWR NEKIRLW NEKIRWL NEKIWLR NEKIWRL NEKLIRW NEKLIWR NEKLRIW NEKLRWI NEKLWIR NEKLWRI NEKRILW NEKRIWL NEKRLIW NEKRLWI NEKRWIL NEKRWLI NEKWILR NEKWIRL NEKWLIR NEKWLRI NEKWRIL NEKWRLI NELIKRW NELIKWR NELIRKW NELIRWK NELIWKR NELIWRK NELKIRW NELKIWR NELKRIW NELKRWI NELKWIR NELKWRI NELRIKW NELRIWK NELRKIW NELRKWI NELRWIK NELRWKI NELWIKR NELWIRK NELWKIR NELWKRI NELWRIK NELWRKI NERIKLW NERIKWL NERILKW NERILWK NERIWKL NERIWLK NERKILW NERKIWL NERKLIW NERKLWI NERKWIL NERKWLI NERLIKW NERLIWK NERLKIW NERLKWI NERLWIK NERLWKI NERWIKL NERWILK NERWKIL NERWKLI NERWLIK NERWLKI NEWIKLR NEWIKRL NEWILKR NEWILRK NEWIRKL NEWIRLK NEWKILR NEWKIRL NEWKLIR NEWKLRI NEWKRIL NEWKRLI NEWLIKR NEWLIRK NEWLKIR NEWLKRI NEWLRIK NEWLRKI NEWRIKL NEWRILK NEWRKIL NEWRKLI NEWRLIK NEWRLKI NIEKLRW NIEKLWR NIEKRLW NIEKRWL NIEKWLR NIEKWRL NIELKRW NIELKWR NIELRKW NIELRWK NIELWKR NIELWRK NIERKLW NIERKWL NIERLKW NIERLWK NIERWKL NIERWLK NIEWKLR NIEWKRL NIEWLKR NIEWLRK NIEWRKL NIEWRLK NIKELRW NIKELWR NIKERLW NIKERWL NIKEWLR NIKEWRL NIKLERW NIKLEWR NIKLREW NIKLRWE NIKLWER NIKLWRE NIKRELW NIKREWL NIKRLEW NIKRLWE NIKRWEL NIKRWLE NIKWELR NIKWERL NIKWLER NIKWLRE NIKWREL NIKWRLE NILEKRW NILEKWR NILERKW NILERWK NILEWKR NILEWRK NILKERW NILKEWR NILKREW NILKRWE NILKWER NILKWRE NILREKW NILREWK NILRKEW NILRKWE NILRWEK NILRWKE NILWEKR NILWERK NILWKER NILWKRE NILWREK NILWRKE NIREKLW NIREKWL NIRELKW NIRELWK NIREWKL NIREWLK NIRKELW NIRKEWL NIRKLEW NIRKLWE NIRKWEL NIRKWLE NIRLEKW NIRLEWK NIRLKEW NIRLKWE NIRLWEK NIRLWKE NIRWEKL NIRWELK NIRWKEL NIRWKLE NIRWLEK NIRWLKE NIWEKLR NIWEKRL NIWELKR NIWELRK NIWERKL NIWERLK NIWKELR NIWKERL NIWKLER NIWKLRE NIWKREL NIWKRLE NIWLEKR NIWLERK NIWLKER NIWLKRE NIWLREK NIWLRKE NIWREKL NIWRELK NIWRKEL NIWRKLE NIWRLEK NIWRLKE NKEILRW NKEILWR NKEIRLW NKEIRWL NKEIWLR NKEIWRL NKELIRW NKELIWR NKELRIW NKELRWI NKELWIR NKELWRI NKERILW NKERIWL NKERLIW NKERLWI NKERWIL NKERWLI NKEWILR NKEWIRL NKEWLIR NKEWLRI NKEWRIL NKEWRLI NKIELRW NKIELWR NKIERLW NKIERWL NKIEWLR NKIEWRL NKILERW NKILEWR NKILREW NKILRWE NKILWER NKILWRE NKIRELW NKIREWL NKIRLEW NKIRLWE NKIRWEL NKIRWLE NKIWELR NKIWERL NKIWLER NKIWLRE NKIWREL NKIWRLE NKLEIRW NKLEIWR NKLERIW NKLERWI NKLEWIR NKLEWRI NKLIERW NKLIEWR NKLIREW NKLIRWE NKLIWER NKLIWRE NKLREIW NKLREWI NKLRIEW NKLRIWE NKLRWEI NKLRWIE NKLWEIR NKLWERI NKLWIER NKLWIRE NKLWREI NKLWRIE NKREILW NKREIWL NKRELIW NKRELWI NKREWIL NKREWLI NKRIELW NKRIEWL NKRILEW NKRILWE NKRIWEL NKRIWLE NKRLEIW NKRLEWI NKRLIEW NKRLIWE NKRLWEI NKRLWIE NKRWEIL NKRWELI NKRWIEL NKRWILE NKRWLEI NKRWLIE NKWEILR NKWEIRL NKWELIR NKWELRI NKWERIL NKWERLI NKWIELR NKWIERL NKWILER NKWILRE NKWIREL NKWIRLE NKWLEIR NKWLERI NKWLIER NKWLIRE NKWLREI NKWLRIE NKWREIL NKWRELI NKWRIEL NKWRILE NKWRLEI NKWRLIE NLEIKRW NLEIKWR NLEIRKW NLEIRWK NLEIWKR NLEIWRK NLEKIRW NLEKIWR NLEKRIW NLEKRWI NLEKWIR NLEKWRI NLERIKW NLERIWK NLERKIW NLERKWI NLERWIK NLERWKI NLEWIKR NLEWIRK NLEWKIR NLEWKRI NLEWRIK NLEWRKI NLIEKRW NLIEKWR NLIERKW NLIERWK NLIEWKR NLIEWRK NLIKERW NLIKEWR NLIKREW NLIKRWE NLIKWER NLIKWRE NLIREKW NLIREWK NLIRKEW NLIRKWE NLIRWEK NLIRWKE NLIWEKR NLIWERK NLIWKER NLIWKRE NLIWREK NLIWRKE NLKEIRW NLKEIWR NLKERIW NLKERWI NLKEWIR NLKEWRI NLKIERW NLKIEWR NLKIREW NLKIRWE NLKIWER NLKIWRE NLKREIW NLKREWI NLKRIEW NLKRIWE NLKRWEI NLKRWIE NLKWEIR NLKWERI NLKWIER NLKWIRE NLKWREI NLKWRIE NLREIKW NLREIWK NLREKIW NLREKWI NLREWIK NLREWKI NLRIEKW NLRIEWK NLRIKEW NLRIKWE NLRIWEK NLRIWKE NLRKEIW NLRKEWI NLRKIEW NLRKIWE NLRKWEI NLRKWIE NLRWEIK NLRWEKI NLRWIEK NLRWIKE NLRWKEI NLRWKIE NLWEIKR NLWEIRK NLWEKIR NLWEKRI NLWERIK NLWERKI NLWIEKR NLWIERK NLWIKER NLWIKRE NLWIREK NLWIRKE NLWKEIR NLWKERI NLWKIER NLWKIRE NLWKREI NLWKRIE NLWREIK NLWREKI NLWRIEK NLWRIKE NLWRKEI NLWRKIE NREIKLW NREIKWL NREILKW NREILWK NREIWKL NREIWLK NREKILW NREKIWL NREKLIW NREKLWI NREKWIL NREKWLI NRELIKW NRELIWK NRELKIW NRELKWI NRELWIK NRELWKI NREWIKL NREWILK NREWKIL NREWKLI NREWLIK NREWLKI NRIEKLW NRIEKWL NRIELKW NRIELWK NRIEWKL NRIEWLK NRIKELW NRIKEWL NRIKLEW NRIKLWE NRIKWEL NRIKWLE NRILEKW NRILEWK NRILKEW NRILKWE NRILWEK NRILWKE NRIWEKL NRIWELK NRIWKEL NRIWKLE NRIWLEK NRIWLKE NRKEILW NRKEIWL NRKELIW NRKELWI NRKEWIL NRKEWLI NRKIELW NRKIEWL NRKILEW NRKILWE NRKIWEL NRKIWLE NRKLEIW NRKLEWI NRKLIEW NRKLIWE NRKLWEI NRKLWIE NRKWEIL NRKWELI NRKWIEL NRKWILE NRKWLEI NRKWLIE NRLEIKW NRLEIWK NRLEKIW NRLEKWI NRLEWIK NRLEWKI NRLIEKW NRLIEWK NRLIKEW NRLIKWE NRLIWEK NRLIWKE NRLKEIW NRLKEWI NRLKIEW NRLKIWE NRLKWEI NRLKWIE NRLWEIK NRLWEKI NRLWIEK NRLWIKE NRLWKEI NRLWKIE NRWEIKL NRWEILK NRWEKIL NRWEKLI NRWELIK NRWELKI NRWIEKL NRWIELK NRWIKEL NRWIKLE NRWILEK NRWILKE NRWKEIL NRWKELI NRWKIEL NRWKILE NRWKLEI NRWKLIE NRWLEIK NRWLEKI NRWLIEK NRWLIKE NRWLKEI NRWLKIE NWEIKLR NWEIKRL NWEILKR NWEILRK NWEIRKL NWEIRLK NWEKILR NWEKIRL NWEKLIR NWEKLRI NWEKRIL NWEKRLI NWELIKR NWELIRK NWELKIR NWELKRI NWELRIK NWELRKI NWERIKL NWERILK NWERKIL NWERKLI NWERLIK NWERLKI NWIEKLR NWIEKRL NWIELKR NWIELRK NWIERKL NWIERLK NWIKELR NWIKERL NWIKLER NWIKLRE NWIKREL NWIKRLE NWILEKR NWILERK NWILKER NWILKRE NWILREK NWILRKE NWIREKL NWIRELK NWIRKEL NWIRKLE NWIRLEK NWIRLKE NWKEILR NWKEIRL NWKELIR NWKELRI NWKERIL NWKERLI NWKIELR NWKIERL NWKILER NWKILRE NWKIREL NWKIRLE NWKLEIR NWKLERI NWKLIER NWKLIRE NWKLREI NWKLRIE NWKREIL NWKRELI NWKRIEL NWKRILE NWKRLEI NWKRLIE NWLEIKR NWLEIRK NWLEKIR NWLEKRI NWLERIK NWLERKI NWLIEKR NWLIERK NWLIKER NWLIKRE NWLIREK NWLIRKE NWLKEIR NWLKERI NWLKIER NWLKIRE NWLKREI NWLKRIE NWLREIK NWLREKI NWLRIEK NWLRIKE NWLRKEI NWLRKIE NWREIKL NWREILK NWREKIL NWREKLI NWRELIK NWRELKI NWRIEKL NWRIELK NWRIKEL NWRIKLE NWRILEK NWRILKE NWRKEIL NWRKELI NWRKIEL NWRKILE NWRKLEI NWRKLIE NWRLEIK NWRLEKI NWRLIEK NWRLIKE NWRLKEI NWRLKIE
 REIKLNW REIKLWN REIKNLW REIKNWL REIKWLN REIKWNL REILKNW REILKWN REILNKW REILNWK REILWKN REILWNK REINKLW REINKWL REINLKW REINLWK REINWKL REINWLK REIWKLN REIWKNL REIWLKN REIWLNK REIWNKL REIWNLK REKILNW REKILWN REKINLW REKINWL REKIWLN REKIWNL REKLINW REKLIWN REKLNIW REKLNWI REKLWIN REKLWNI REKNILW REKNIWL REKNLIW REKNLWI REKNWIL REKNWLI REKWILN REKWINL REKWLIN REKWLNI REKWNIL REKWNLI RELIKNW RELIKWN RELINKW RELINWK RELIWKN RELIWNK RELKINW RELKIWN RELKNIW RELKNWI RELKWIN RELKWNI RELNIKW RELNIWK RELNKIW RELNKWI RELNWIK RELNWKI RELWIKN RELWINK RELWKIN RELWKNI RELWNIK RELWNKI RENIKLW RENIKWL RENILKW RENILWK RENIWKL RENIWLK RENKILW RENKIWL RENKLIW RENKLWI RENKWIL RENKWLI RENLIKW RENLIWK RENLKIW RENLKWI RENLWIK RENLWKI RENWIKL RENWILK RENWKIL RENWKLI RENWLIK RENWLKI REWIKLN REWIKNL REWILKN REWILNK REWINKL REWINLK REWKILN REWKINL REWKLIN REWKLNI REWKNIL REWKNLI REWLIKN REWLINK REWLKIN REWLKNI REWLNIK REWLNKI REWNIKL REWNILK REWNKIL REWNKLI REWNLIK REWNLKI RIEKLNW RIEKLWN RIEKNLW RIEKNWL RIEKWLN RIEKWNL RIELKNW RIELKWN RIELNKW RIELNWK RIELWKN RIELWNK RIENKLW RIENKWL RIENLKW RIENLWK RIENWKL RIENWLK RIEWKLN RIEWKNL RIEWLKN RIEWLNK RIEWNKL RIEWNLK RIKELNW RIKELWN RIKENLW RIKENWL RIKEWLN RIKEWNL RIKLENW RIKLEWN RIKLNEW RIKLNWE RIKLWEN RIKLWNE RIKNELW RIKNEWL RIKNLEW RIKNLWE RIKNWEL RIKNWLE RIKWELN RIKWENL RIKWLEN RIKWLNE RIKWNEL RIKWNLE RILEKNW RILEKWN RILENKW RILENWK RILEWKN RILEWNK RILKENW RILKEWN RILKNEW RILKNWE RILKWEN RILKWNE RILNEKW RILNEWK RILNKEW RILNKWE RILNWEK RILNWKE RILWEKN RILWENK RILWKEN RILWKNE RILWNEK RILWNKE RINEKLW RINEKWL RINELKW RINELWK RINEWKL RINEWLK RINKELW RINKEWL RINKLEW RINKLWE RINKWEL RINKWLE RINLEKW RINLEWK RINLKEW RINLKWE RINLWEK RINLWKE RINWEKL RINWELK RINWKEL RINWKLE RINWLEK RINWLKE RIWEKLN RIWEKNL RIWELKN RIWELNK RIWENKL RIWENLK RIWKELN RIWKENL RIWKLEN RIWKLNE RIWKNEL RIWKNLE RIWLEKN RIWLENK RIWLKEN RIWLKNE RIWLNEK RIWLNKE RIWNEKL RIWNELK RIWNKEL RIWNKLE RIWNLEK RIWNLKE RKEILNW RKEILWN RKEINLW RKEINWL RKEIWLN RKEIWNL RKELINW RKELIWN RKELNIW RKELNWI RKELWIN RKELWNI RKENILW RKENIWL RKENLIW RKENLWI RKENWIL RKENWLI RKEWILN RKEWINL RKEWLIN RKEWLNI RKEWNIL RKEWNLI RKIELNW RKIELWN RKIENLW RKIENWL RKIEWLN RKIEWNL RKILENW RKILEWN RKILNEW RKILNWE RKILWEN RKILWNE RKINELW RKINEWL RKINLEW RKINLWE RKINWEL RKINWLE RKIWELN RKIWENL RKIWLEN RKIWLNE RKIWNEL RKIWNLE RKLEINW RKLEIWN RKLENIW RKLENWI RKLEWIN RKLEWNI RKLIENW RKLIEWN RKLINEW RKLINWE RKLIWEN RKLIWNE RKLNEIW RKLNEWI RKLNIEW RKLNIWE RKLNWEI RKLNWIE RKLWEIN RKLWENI RKLWIEN RKLWINE RKLWNEI RKLWNIE RKNEILW RKNEIWL RKNELIW RKNELWI RKNEWIL RKNEWLI RKNIELW RKNIEWL RKNILEW RKNILWE RKNIWEL RKNIWLE RKNLEIW RKNLEWI RKNLIEW RKNLIWE RKNLWEI RKNLWIE RKNWEIL RKNWELI RKNWIEL RKNWILE RKNWLEI RKNWLIE RKWEILN RKWEINL RKWELIN RKWELNI RKWENIL RKWENLI RKWIELN RKWIENL RKWILEN RKWILNE RKWINEL RKWINLE RKWLEIN RKWLENI RKWLIEN RKWLINE RKWLNEI RKWLNIE RKWNEIL RKWNELI RKWNIEL RKWNILE RKWNLEI RKWNLIE RLEIKNW RLEIKWN RLEINKW RLEINWK RLEIWKN RLEIWNK RLEKINW RLEKIWN RLEKNIW RLEKNWI RLEKWIN RLEKWNI RLENIKW RLENIWK RLENKIW RLENKWI RLENWIK RLENWKI RLEWIKN RLEWINK RLEWKIN RLEWKNI RLEWNIK RLEWNKI RLIEKNW RLIEKWN RLIENKW RLIENWK RLIEWKN RLIEWNK RLIKENW RLIKEWN RLIKNEW RLIKNWE RLIKWEN RLIKWNE RLINEKW RLINEWK RLINKEW RLINKWE RLINWEK RLINWKE RLIWEKN RLIWENK RLIWKEN RLIWKNE RLIWNEK RLIWNKE RLKEINW RLKEIWN RLKENIW RLKENWI RLKEWIN RLKEWNI RLKIENW RLKIEWN RLKINEW RLKINWE RLKIWEN RLKIWNE RLKNEIW RLKNEWI RLKNIEW RLKNIWE RLKNWEI RLKNWIE RLKWEIN RLKWENI RLKWIEN RLKWINE RLKWNEI RLKWNIE RLNEIKW RLNEIWK RLNEKIW RLNEKWI RLNEWIK RLNEWKI RLNIEKW RLNIEWK RLNIKEW RLNIKWE RLNIWEK RLNIWKE RLNKEIW RLNKEWI RLNKIEW RLNKIWE RLNKWEI RLNKWIE RLNWEIK RLNWEKI RLNWIEK RLNWIKE RLNWKEI RLNWKIE RLWEIKN RLWEINK RLWEKIN RLWEKNI RLWENIK RLWENKI RLWIEKN RLWIENK RLWIKEN RLWIKNE RLWINEK RLWINKE RLWKEIN RLWKENI RLWKIEN RLWKINE RLWKNEI RLWKNIE RLWNEIK RLWNEKI RLWNIEK RLWNIKE RLWNKEI RLWNKIE RNEIKLW RNEIKWL RNEILKW RNEILWK RNEIWKL RNEIWLK RNEKILW RNEKIWL RNEKLIW RNEKLWI RNEKWIL RNEKWLI RNELIKW RNELIWK RNELKIW RNELKWI RNELWIK RNELWKI RNEWIKL RNEWILK RNEWKIL RNEWKLI RNEWLIK RNEWLKI RNIEKLW RNIEKWL RNIELKW RNIELWK RNIEWKL RNIEWLK RNIKELW RNIKEWL RNIKLEW RNIKLWE RNIKWEL RNIKWLE RNILEKW RNILEWK RNILKEW RNILKWE RNILWEK RNILWKE RNIWEKL RNIWELK RNIWKEL RNIWKLE RNIWLEK RNIWLKE RNKEILW RNKEIWL RNKELIW RNKELWI RNKEWIL RNKEWLI RNKIELW RNKIEWL RNKILEW RNKILWE RNKIWEL RNKIWLE RNKLEIW RNKLEWI RNKLIEW RNKLIWE RNKLWEI RNKLWIE RNKWEIL RNKWELI RNKWIEL RNKWILE RNKWLEI RNKWLIE RNLEIKW RNLEIWK RNLEKIW RNLEKWI RNLEWIK RNLEWKI RNLIEKW RNLIEWK RNLIKEW RNLIKWE RNLIWEK RNLIWKE RNLKEIW RNLKEWI RNLKIEW RNLKIWE RNLKWEI RNLKWIE RNLWEIK RNLWEKI RNLWIEK RNLWIKE RNLWKEI RNLWKIE RNWEIKL RNWEILK RNWEKIL RNWEKLI RNWELIK RNWELKI RNWIEKL RNWIELK RNWIKEL RNWIKLE RNWILEK RNWILKE RNWKEIL RNWKELI RNWKIEL RNWKILE RNWKLEI RNWKLIE RNWLEIK RNWLEKI RNWLIEK RNWLIKE RNWLKEI RNWLKIE RWEIKLN RWEIKNL RWEILKN RWEILNK RWEINKL RWEINLK RWEKILN RWEKINL RWEKLIN RWEKLNI RWEKNIL RWEKNLI RWELIKN RWELINK RWELKIN RWELKNI RWELNIK RWELNKI RWENIKL RWENILK RWENKIL RWENKLI RWENLIK RWENLKI RWIEKLN RWIEKNL RWIELKN RWIELNK RWIENKL RWIENLK RWIKELN RWIKENL RWIKLEN RWIKLNE RWIKNEL RWIKNLE RWILEKN RWILENK RWILKEN RWILKNE RWILNEK RWILNKE RWINEKL RWINELK RWINKEL RWINKLE RWINLEK RWINLKE RWKEILN RWKEINL RWKELIN RWKELNI RWKENIL RWKENLI RWKIELN RWKIENL RWKILEN RWKILNE RWKINEL RWKINLE RWKLEIN RWKLENI RWKLIEN RWKLINE RWKLNEI RWKLNIE RWKNEIL RWKNELI RWKNIEL RWKNILE RWKNLEI RWKNLIE RWLEIKN RWLEINK RWLEKIN RWLEKNI RWLENIK RWLENKI RWLIEKN RWLIENK RWLIKEN RWLIKNE RWLINEK RWLINKE RWLKEIN RWLKENI RWLKIEN RWLKINE RWLKNEI RWLKNIE RWLNEIK RWLNEKI RWLNIEK RWLNIKE RWLNKEI RWLNKIE RWNEIKL RWNEILK RWNEKIL RWNEKLI RWNELIK RWNELKI RWNIEKL RWNIELK RWNIKEL RWNIKLE RWNILEK RWNILKE RWNKEIL RWNKELI RWNKIEL RWNKILE RWNKLEI RWNKLIE RWNLEIK RWNLEKI RWNLIEK RWNLIKE RWNLKEI RWNLKIE
 WEIKLNR WEIKLRN WEIKNLR WEIKNRL WEIKRLN WEIKRNL WEILKNR WEILKRN WEILNKR WEILNRK WEILRKN WEILRNK WEINKLR WEINKRL WEINLKR WEINLRK WEINRKL WEINRLK WEIRKLN WEIRKNL WEIRLKN WEIRLNK WEIRNKL WEIRNLK WEKILNR WEKILRN WEKINLR WEKINRL WEKIRLN WEKIRNL WEKLINR WEKLIRN WEKLNIR WEKLNRI WEKLRIN WEKLRNI WEKNILR WEKNIRL WEKNLIR WEKNLRI WEKNRIL WEKNRLI WEKRILN WEKRINL WEKRLIN WEKRLNI WEKRNIL WEKRNLI WELIKNR WELIKRN WELINKR WELINRK WELIRKN WELIRNK WELKINR WELKIRN WELKNIR WELKNRI WELKRIN WELKRNI WELNIKR WELNIRK WELNKIR WELNKRI WELNRIK WELNRKI WELRIKN WELRINK WELRKIN WELRKNI WELRNIK WELRNKI WENIKLR WENIKRL WENILKR WENILRK WENIRKL WENIRLK WENKILR WENKIRL WENKLIR WENKLRI WENKRIL WENKRLI WENLIKR WENLIRK WENLKIR WENLKRI WENLRIK WENLRKI WENRIKL WENRILK WENRKIL WENRKLI WENRLIK WENRLKI WERIKLN WERIKNL WERILKN WERILNK WERINKL WERINLK WERKILN WERKINL WERKLIN WERKLNI WERKNIL WERKNLI WERLIKN WERLINK WERLKIN WERLKNI WERLNIK WERLNKI WERNIKL WERNILK WERNKIL WERNKLI WERNLIK WERNLKI WIEKLNR WIEKLRN WIEKNLR WIEKNRL WIEKRLN WIEKRNL WIELKNR WIELKRN WIELNKR WIELNRK WIELRKN WIELRNK WIENKLR WIENKRL WIENLKR WIENLRK WIENRKL WIENRLK WIERKLN WIERKNL WIERLKN WIERLNK WIERNKL WIERNLK WIKELNR WIKELRN WIKENLR WIKENRL WIKERLN WIKERNL WIKLENR WIKLERN WIKLNER WIKLNRE WIKLREN WIKLRNE WIKNELR WIKNERL WIKNLER WIKNLRE WIKNREL WIKNRLE WIKRELN WIKRENL WIKRLEN WIKRLNE WIKRNEL WIKRNLE WILEKNR WILEKRN WILENKR WILENRK WILERKN WILERNK WILKENR WILKERN WILKNER WILKNRE WILKREN WILKRNE WILNEKR WILNERK WILNKER WILNKRE WILNREK WILNRKE WILREKN WILRENK WILRKEN WILRKNE WILRNEK WILRNKE WINEKLR WINEKRL WINELKR WINELRK WINERKL WINERLK WINKELR WINKERL WINKLER WINKLRE WINKREL WINKRLE WINLEKR WINLERK WINLKER WINLKRE WINLREK WINLRKE WINREKL WINRELK WINRKEL WINRKLE WINRLEK WINRLKE WIREKLN WIREKNL WIRELKN WIRELNK WIRENKL WIRENLK WIRKELN WIRKENL WIRKLEN WIRKLNE WIRKNEL WIRKNLE WIRLEKN WIRLENK WIRLKEN WIRLKNE WIRLNEK WIRLNKE WIRNEKL WIRNELK WIRNKEL WIRNKLE WIRNLEK WIRNLKE WKEILNR WKEILRN WKEINLR WKEINRL WKEIRLN WKEIRNL WKELINR WKELIRN WKELNIR WKELNRI WKELRIN WKELRNI WKENILR WKENIRL WKENLIR WKENLRI WKENRIL WKENRLI WKERILN WKERINL WKERLIN WKERLNI WKERNIL WKERNLI WKIELNR WKIELRN WKIENLR WKIENRL WKIERLN WKIERNL WKILENR WKILERN WKILNER WKILNRE WKILREN WKILRNE WKINELR WKINERL WKINLER WKINLRE WKINREL WKINRLE WKIRELN WKIRENL WKIRLEN WKIRLNE WKIRNEL WKIRNLE WKLEINR WKLEIRN WKLENIR WKLENRI WKLERIN WKLERNI WKLIENR WKLIERN WKLINER WKLINRE WKLIREN WKLIRNE WKLNEIR WKLNERI WKLNIER WKLNIRE WKLNREI WKLNRIE WKLREIN WKLRENI WKLRIEN WKLRINE WKLRNEI WKLRNIE WKNEILR WKNEIRL WKNELIR WKNELRI WKNERIL WKNERLI WKNIELR WKNIERL WKNILER WKNILRE WKNIREL WKNIRLE WKNLEIR WKNLERI WKNLIER WKNLIRE WKNLREI WKNLRIE WKNREIL WKNRELI WKNRIEL WKNRILE WKNRLEI WKNRLIE WKREILN WKREINL WKRELIN WKRELNI WKRENIL WKRENLI WKRIELN WKRIENL WKRILEN WKRILNE WKRINEL WKRINLE WKRLEIN WKRLENI WKRLIEN WKRLINE WKRLNEI WKRLNIE WKRNEIL WKRNELI WKRNIEL WKRNILE WKRNLEI WKRNLIE WLEIKNR WLEIKRN WLEINKR WLEINRK WLEIRKN WLEIRNK WLEKINR WLEKIRN WLEKNIR WLEKNRI WLEKRIN WLEKRNI WLENIKR WLENIRK WLENKIR WLENKRI WLENRIK WLENRKI WLERIKN WLERINK WLERKIN WLERKNI WLERNIK WLERNKI WLIEKNR WLIEKRN WLIENKR WLIENRK WLIERKN WLIERNK WLIKENR WLIKERN WLIKNER WLIKNRE WLIKREN WLIKRNE WLINEKR WLINERK WLINKER WLINKRE WLINREK WLINRKE WLIREKN WLIRENK WLIRKEN WLIRKNE WLIRNEK WLIRNKE WLKEINR WLKEIRN WLKENIR WLKENRI WLKERIN WLKERNI WLKIENR WLKIERN WLKINER WLKINRE WLKIREN WLKIRNE WLKNEIR WLKNERI WLKNIER WLKNIRE WLKNREI WLKNRIE WLKREIN WLKRENI WLKRIEN WLKRINE WLKRNEI WLKRNIE WLNEIKR WLNEIRK WLNEKIR WLNEKRI WLNERIK WLNERKI WLNIEKR WLNIERK WLNIKER WLNIKRE WLNIREK WLNIRKE WLNKEIR WLNKERI WLNKIER WLNKIRE WLNKREI WLNKRIE WLNREIK WLNREKI WLNRIEK WLNRIKE WLNRKEI WLNRKIE WLREIKN WLREINK WLREKIN WLREKNI WLRENIK WLRENKI WLRIEKN WLRIENK WLRIKEN WLRIKNE WLRINEK WLRINKE WLRKEIN WLRKENI WLRKIEN WLRKINE WLRKNEI WLRKNIE WLRNEIK WLRNEKI WLRNIEK WLRNIKE WLRNKEI WLRNKIE WNEIKLR WNEIKRL WNEILKR WNEILRK WNEIRKL WNEIRLK WNEKILR WNEKIRL WNEKLIR WNEKLRI WNEKRIL WNEKRLI WNELIKR WNELIRK WNELKIR WNELKRI WNELRIK WNELRKI WNERIKL WNERILK WNERKIL WNERKLI WNERLIK WNERLKI WNIEKLR WNIEKRL WNIELKR WNIELRK WNIERKL WNIERLK WNIKELR WNIKERL WNIKLER WNIKLRE WNIKREL WNIKRLE WNILEKR WNILERK WNILKER WNILKRE WNILREK WNILRKE WNIREKL WNIRELK WNIRKEL WNIRKLE WNIRLEK WNIRLKE WNKEILR WNKEIRL WNKELIR WNKELRI WNKERIL WNKERLI WNKIELR WNKIERL WNKILER WNKILRE WNKIREL WNKIRLE WNKLEIR WNKLERI WNKLIER WNKLIRE WNKLREI WNKLRIE WNKREIL WNKRELI WNKRIEL WNKRILE WNKRLEI WNKRLIE WNLEIKR WNLEIRK WNLEKIR WNLEKRI WNLERIK WNLERKI WNLIEKR WNLIERK WNLIKER WNLIKRE WNLIREK WNLIRKE WNLKEIR WNLKERI WNLKIER WNLKIRE WNLKREI WNLKRIE WNLREIK WNLREKI WNLRIEK WNLRIKE WNLRKEI WNLRKIE WNREIKL WNREILK WNREKIL WNREKLI WNRELIK WNRELKI WNRIEKL WNRIELK WNRIKEL WNRIKLE WNRILEK WNRILKE WNRKEIL WNRKELI WNRKIEL WNRKILE WNRKLEI WNRKLIE WNRLEIK WNRLEKI WNRLIEK WNRLIKE WNRLKEI WNRLKIE WREIKLN WREIKNL WREILKN WREILNK WREINKL WREINLK WREKILN WREKINL WREKLIN WREKLNI WREKNIL WREKNLI WRELIKN WRELINK WRELKIN WRELKNI WRELNIK WRELNKI WRENIKL WRENILK WRENKIL WRENKLI WRENLIK WRENLKI WRIEKLN WRIEKNL WRIELKN WRIELNK WRIENKL WRIENLK WRIKELN WRIKENL WRIKLEN WRIKLNE WRIKNEL WRIKNLE WRILEKN WRILENK WRILKEN WRILKNE WRILNEK WRILNKE WRINEKL WRINELK WRINKEL WRINKLE WRINLEK WRINLKE WRKEILN WRKEINL WRKELIN WRKELNI WRKENIL WRKENLI WRKIELN WRKIENL WRKILEN WRKILNE WRKINEL WRKINLE WRKLEIN WRKLENI WRKLIEN WRKLINE WRKLNEI WRKLNIE WRKNEIL WRKNELI WRKNIEL WRKNILE WRKNLEI WRKNLIE WRLEIKN WRLEINK WRLEKIN WRLEKNI WRLENIK WRLENKI WRLIEKN WRLIENK WRLIKEN WRLIKNE WRLINEK WRLINKE WRLKEIN WRLKENI WRLKIEN WRLKINE WRLKNEI WRLKNIE WRLNEIK WRLNEKI WRLNIEK WRLNIKE WRLNKEI WRLNKIE WRNEIKL WRNEILK WRNEKIL WRNEKLI WRNELIK WRNELKI WRNIEKL WRNIELK WRNIKEL WRNIKLE WRNILEK WRNILKE WRNKEIL WRNKELI WRNKIEL WRNKILE WRNKLEI WRNKLIE WRNLEIK WRNLEKI WRNLIEK WRNLIKE WRNLKEI WRNLKIE'</code></pre>
    </div><!-- end panel-body-->
</div><!-- end panel-->

Since we are examining every permutation of a given set of letters, it's a factorial algorithm. How bad could it really be? Well, let's look at our actual scenario: there are <code>7!</code>, or <code>5_040</code>, different options to scan through, checking to see if any of them is contained in <code>WORDS</code>. Computers are fast though, so maybe that's not too much of an issue, and more importantly, maybe that <b>is</b> the correct way to run this algorithm - after all, given my wordset (from <a href="https://github.com/anderson-dan-w/Words/tree/master/wordplay/texts">my github</a>), there are <code>24_029</code> unique 7-letter words. Maybe it does make more sense just to iterate through all the options of <code>WRINKLE</code>.

But does it scale well? Here's a quick chart that hopefully shows the issue.

<div>
    <a href="https://plot.ly/~anderson.dan.w/23/" target="_blank" title="factorial vs word-count" style="display: block; text-align: center;"><img src="https://plot.ly/~anderson.dan.w/23.png" alt="factorial vs word-count" style="max-width: 100%;width: 600px;"  width="600" onerror="this.onerror=null;this.src='https://plot.ly/404.png';" /></a>
    <script data-plotly="anderson.dan.w:23"  src="https://plot.ly/embed.js" async></script>
</div>
and since that is kinda hard to see what's going on, let's make the y-axis a log scale. 

<div>
    <a href="https://plot.ly/~anderson.dan.w/25/" target="_blank" title="factorial vs word-count, log" style="display: block; text-align: center;"><img src="https://plot.ly/~anderson.dan.w/25.png" alt="factorial vs word-count, log" style="max-width: 100%;width: 600px;"  width="600" onerror="this.onerror=null;this.src='https://plot.ly/404.png';" /></a>
    <script data-plotly="anderson.dan.w:25"  src="https://plot.ly/embed.js" async></script>
</div>

As we can see, for short words, it might be reasonable to use the factorial approach, but for longer words, it doesn't really make sense to iterate through millions and millions of options, just to compare against the few thousand possibilities.

<h3>Now what?</h3>

If we had some intermediate representation for these words, we could try to "meet in the middle", and not do factorial-sized operations. Let's consider for a minute what characteristics we find interesting about anagrams - for a given collection of letters, some number of permutations are valid words. If we can find some canonical collection or representation, that doesn't vary based on the <i>placement</i> of the letters, perhaps we can change our search space.

There are lots of different, valid ways to get a canonical representation of but the first that springs to my mind is through sorting. I know, I know, I just said we <i>shouldn't</i> rely on placement, but this is different: we don't care what order the letters were in beforehand, when they made up a word, we just want to get them into some consistent form, and alphabetizing them seems like a natural, straightforward way to do that.

<div class="panel panel-warning">
    <div class="panel-heading">
    Detour about <code>set()</code> and <code>collections.Counter()</code>
        <button type="button" class = "btn btn-default" id="set_counter_toggle">show/hide</button>
    </div>
    <div class="panel-body" id="set_counter">
    Some other early thoughts about how to get a consistent, canonical representation might include <code>set()</code>. However, we lose some important information when we make a <code>set()</code> of something, namely the repetition. An example makes it clear:
<pre><code class="python">set("REST"), set("TREES", set("STREET")
    ## {'E', 'R', 'S', 'T'}, {'E', 'R', 'S', 'T'}, {'E', 'R', 'S', 'T'}
set("REST-") == set("SETTER-TREES-STEER") ## True</code></pre>
    We no longer know how many times each letter appeared, just that it appeared, so we will get spurious results. Alright, we might say, let's keep track of the counts, like in a dictionary. Python provides a built-in (well, in a package in the standard library, at least) to make this super-simple:
<pre><code class="python">from collections import Counter
Counter("REST")
  ## {'E': 1, 'R': 1, 'S': 1, 'T': 1}
Counter("TREES")
  ## {'E': 2, 'R': 1, 'S': 1, 'T': 1}
Counter("STREET")
  ## {'E': 2, 'R': 1, 'S': 1, 'T': 2}
Counter("REST") == Counter("STREET") ## False</code></pre>
    The issue with <code>Counter</code> is less clear, but in a few moments, we will see that it's helpful to make our representation a key in a dictionary, and dictionaries aren't good dictionary keys - they are unhashable as-is (you can alter them) and there isn't a built-in <code>frozendict</code> and that just seems like a lot of hassle anyway - take a jumble, create the <code>Counter</code>, convert that to a <code>frozendict</code>, then add it to some larger dictionary.
    </div> <!-- end panel-body -->
</div> <!-- end panel -->

So, let's make a simple function to create our canonical representation:
<pre><code class="python">def canonicalize(letters):
    ## returning a str, besides being more natural, will prove beneficial
    return "".join(sorted(letters))</code></pre>

Now, the most direct (but maybe not most time-efficient) way to use this fact
is to compare each sorted-jumble to each sorted-valid-word, and pull out the
ones that match:
<pre><code class="python">jumble = "ATEM"
sorted_jumble = canonicalize(jumble)
for word in WORDS:
    ## don't waste time on different length words
    if len(word) != len(sorted_jumble):
        continue
    if canonicalize(word) == sorted_jumble:
        print(word)
</code></pre>

We've taken our <code>O(n!)</code> solution and changed it to <code>O(m n lg n)</code>. Whoa, where'd all that come from? Is that honestly better than n!, because it's hard to tell (and in fact, it may not be; it depends on the characteristics of your data). Well, we altered our algorithm to look at every word in our word-list (minor optimization - look at every word of the same length as our jumble), so I'm calling the number of words in our word-list <code>m</code>. Then, for each of these words (and our jumble, though that falls out in big-O), we need to sort the letters to come up with the canonical representation, which takes on average, assuming a reasonably-implemented sorting function, <code>O(n lg n)</code>.

<div class="panel panel-warning">
    <div class="panel-heading">Bonus
        <button type="button" class="btn btn-default" id="bonus_toggle">show/hide</button>
    </div>
    <div class="panel-body" id="bonus">There's an <code>O(n)</code> canonicalizing function, rather than <code>O(n lg n)</code> - more on that in another post, perhaps.</div>
</div> <!-- end panel -->
The savings get pretty clear as we push further out into word-length, since the naive algorithm scaled with word-length, while this new one scales with number of words in our dictionary, which for me at least, starts decreasing pretty quickly. For a 10-letter word, we do ~<code>22_000</code> sorts, rather than 3.5 million permutations; for a 15-letter word, we do ~<code>3_000</code> sorts, rather than 1 trillion permutations; and for a 26-letter jumble, we do <code>0</code> sorts, since there are no 26-letter words in my <code>WORDS</code>, rather than 100 trillion trillion (~2<sup>88</sup>) permutations. Even if we could do one permute-and-check per nanosecond, this would still take 12 billion years... 

<h3>Multiple Jumbles</h3>
Adding slightly to the original problem, which just mentioned figuring out if one jumble was an anagram, what if we had many jumbles to anagramize? Sure, we could just loop over each input jumble, and then go sorting all the relevant words in our word-list, but this could get pretty wasteful pretty quickly - we will be doing the same sorting over and over, everytime we encounter another jumble with the same length.

One simple improvement we can make on the problem is to only sort the words in our word-list exactly once, rather than for every new jumble, and save that off somewhere useful to act as a look-up. This is when its useful that our representation is a <code>str</code> rather than a <code>list</code> - we can use <code>str</code>s as keys in a dictionary:
<pre><code class="python">def generate_anagram_lookup(WORDS):
    ANAGRAMS = {}
    for word in WORDS:
        key = canonicalize(word)
        if key in ANAGRAMS:
            ANAGRAMS[key].append(word)
        else:
            ANAGRAMS[key] = [word]
 ## or, since it's python:
from collections import defaultdict
def generate_anagram_lookup(WORDS):
    for word in WORDS:
        key = canonicalize(word)
        ANAGRAMS[key].append(word)</code></pre>
Now, we performed all of our <code>O(m n lg n)</code> work upfront, and are taking up <code>O(m n)</code> space in our precomputed dictionary of anagrams, but each jumble operation is a mere <code>O(1)</code> dictionary look-up:
<pre><code class="python">jumble_key = canonicalize(jumble)
anagrams = ANAGRAMS[jumble_key]</code></pre>

<h3>What we learned:</h3>
<ul>
<li><code>O(n!)</code> solutions may feel intuitive, and in some very specific use cases (short words, in this case) might be reasonable, but for a scalable, repetitive process, factorial is probably not going to be the overall winner.</li>
<li>Sometimes, it helps to reconsider the problem from another angle - in this case, the helpful insight was that our *actual* search space was the word-list, which is vastly smaller than the *possible* search space of all letter combinations.</li>
<li>Some problems are best-served by making the outputs and the inputs meet somewhere in the middle. We were able to develop a more efficient algorithm when we decided to find a canonical representation, and do the bulk of our work making the valid words fit this intermediary, instead of forcing every input to exactly match the outputs.</li>
<li>Lastly, we saw that there can be time-memory trade offs when dealing with some of these structures - if we have <code>O(m n)</code> space to hold our dictionary of anagrams then we reduce our *search* time to <code>O(1)</code> per jumble. Notably, our pre-computation was <code>O(m n lg n)</code> time still. The benefit comes from the re-use: we won't need to re-sort all 4-letter words every time we encounter a 4-letter jumble, so with a large list of jumbles, this will start to save lots of repeated calculations.</li>
</ul>
<script>
// the massive wall of text for 7! permutations
$("#anagram6toggle").click(function() {
    $("#anagram6").toggle("show");
});
// initially hidden
$("#anagram6toggle").click();
// set and counter detour
$("#set_counter_toggle").click(function() {
    $("#set_counter").toggle("show");
});
// initially hidden
$("#set_counter_toggle").click();
// bonus
$("#bonus_toggle").click(function() {
    $("#bonus").toggle("show");
});
// initially hidden
$("#bonus_toggle").click();
</script>
